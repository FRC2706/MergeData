name: Build & deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_web_and_apk:
    name: Build Web and APK
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    
    - name: Install Flutter
      uses: subosito/flutter-action@v1
      with:
        flutter-version: '3.x'
    
    - name: Get dependencies
      run: flutter pub get

    - name: Create .env file
      run: |
        echo GOOGLE_SHEETS_DATA=${{ secrets.GOOGLE_SHEETS_DATA }} >> .env
        echo SPREADSHEET_ID=${{ secrets.SPREADSHEET_ID }} >> .env
        echo WORKSHEET_NAME=${{ secrets.WORKSHEET_NAME }} >> .env
    
    - name: Build web release project
      run: flutter build web

    - name: Build APK
      run: flutter build apk --release

    - name: Upload web production-ready build files
      uses: actions/upload-artifact@v2
      with:
        name: production-files
        path: ./build/web

    - name: Upload APK
      uses: actions/upload-artifact@v2
      with:
        name: app-release.apk
        path: build/app/outputs/flutter-apk/app-release.apk

  release:
    name: Create Release
    needs: build_web_and_apk
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Download APK
      uses: actions/download-artifact@v2
      with:
        name: app-release.apk
        path: .

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload APK Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./app-release.apk
        asset_name: app-release.apk
        asset_content_type: application/vnd.android.package-archive
